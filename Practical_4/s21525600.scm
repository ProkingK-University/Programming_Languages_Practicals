(define (stripNegativesDuplicateEvens list)
  (cond ((null? list) '())
        ((negative? (car list)) (stripNegativesDuplicateEvens (cdr list)))
        ((even? (car list)) (cons (car list) (cons (car list) (stripNegativesDuplicateEvens (cdr list)))))
        (else (cons (car list) (stripNegativesDuplicateEvens (cdr list))))))

(newline)
(display "Testing Task 1")
(newline)
(display (stripNegativesDuplicateEvens '()))
(newline)
(display (stripNegativesDuplicateEvens '(-1 -2 -3)))
(newline)
(display (stripNegativesDuplicateEvens '(1 2 -2 3 -3 4 5 -6)))
(newline)